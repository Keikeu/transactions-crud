{"version":3,"sources":["store/reducers/transactions.js","store/reducers/conversion.js","store/reducers/index.js","store/actions/index.js","components/Input/Input.jsx","components/CurrencyConverter/CurrencyConverter.jsx","containers/CurrencyConverterWrapper.js","components/Card/Card.jsx","components/Button/Button.jsx","components/Form/Form.jsx","containers/FormWrapper.js","components/List/ListItem/ListItem.jsx","components/List/List.jsx","containers/ListWrapper.js","components/Maximum/Maximum.jsx","containers/MaximumWrapper.js","App.js","index.js"],"names":["transactions","state","action","type","id","name","amount","filter","transaction","conversion","value","combineReducers","nextTransactionId","Input","props","className","size","title","variant","min","step","placeholder","onChange","onBlur","adornment","error","CurrencyConverter","match","this","onSetConversion","event","validate","target","String","length","React","Component","connect","dispatch","setConversion","Card","display","children","Button","onClick","Form","onAddTransaction","nameError","amountError","handleChange","bind","setState","parseFloat","isValid","isNaN","addTransaction","ListItem","item","toFixed","icon","faTrash","List","onDeleteTransaction","total","reduce","a","b","map","i","key","faBoxOpen","deleteTransaction","Maximum","max","Math","apply","obj","App","CurrencyConverterWrapper","FormWrapper","ListWrapper","MaximumWrapper","store","createStore","rootReducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.72cb35e7.chunk.js","sourcesContent":["const transactions = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TRANSACTION':\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          name: action.name,\r\n          amount: action.amount\r\n        }\r\n      ]\r\n    case 'DELETE_TRANSACTION':\r\n      return state.filter((transaction) => {\r\n         return transaction.id !== action.id\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default transactions;\r\n","const conversion = (state = 4.29, action) => {\r\n  switch (action.type) {\r\n    case 'SET_CONVERSION':\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default conversion;\r\n","import { combineReducers } from 'redux';\r\nimport transactions from './transactions';\r\nimport conversion from './conversion';\r\n\r\nexport default combineReducers({\r\n  transactions,\r\n  conversion\r\n})\r\n","let nextTransactionId = 0\r\n\r\nexport const addTransaction = (name, amount) => ({\r\n  type: 'ADD_TRANSACTION',\r\n  id: nextTransactionId++,\r\n  name,\r\n  amount\r\n})\r\n\r\nexport const deleteTransaction = id => ({\r\n  type: 'DELETE_TRANSACTION',\r\n  id\r\n})\r\n\r\nexport const setConversion = value => ({\r\n  type: 'SET_CONVERSION',\r\n  value\r\n})\r\n","import React from 'react';\r\nimport './Input.css';\r\n\r\nfunction Input(props) {\r\n   return (\r\n      <div className={\"Input \" + props.size}>\r\n\r\n         {props.title &&\r\n            <div className=\"Input__Title\">{props.title}</div>\r\n         }\r\n\r\n         <input\r\n            className={\"Input__Box--\" + props.variant}\r\n            name={props.name}\r\n            type={props.type}\r\n            min={props.min}\r\n            step={props.step}\r\n            value={props.value}\r\n            placeholder={props.placeholder}\r\n            onChange={props.onChange}\r\n            onBlur={props.onBlur}\r\n         />\r\n\r\n         {props.adornment &&\r\n            <div className={\"Input__Adornment--\" + props.variant}>{props.adornment}</div>\r\n         }\r\n\r\n         {props.error &&\r\n            <p className=\"Input__Error\">{props.error}</p>\r\n         }\r\n\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport './CurrencyConverter.css';\r\nimport Input from '../Input/Input';\r\n\r\nclass CurrencyConverter extends React.Component {\r\n   validate(value) {\r\n      if((value.match(/^\\d+[,.]\\d{3,}/))) {     // prevents user from typing in more than 2 decimal digits\r\n         return false;\r\n      }\r\n      return true;\r\n   }\r\n\r\n   render() {\r\n      const {conversion, onSetConversion} = this.props;\r\n\r\n      return (\r\n         <div className=\"CurrencyConverter\">\r\n            <span className=\"Label\"> 1 EUR &nbsp; = </span>\r\n            <Input\r\n               variant=\"filled\"\r\n               type=\"number\"\r\n               min=\"0\"\r\n               step=\"0.01\"\r\n               size=\"medium\"\r\n               value={conversion}\r\n               adornment=\"PLN\"\r\n               onChange={event => {\r\n                  if (this.validate(event.target.value)) {\r\n                     onSetConversion(event.target.value);\r\n                  }\r\n               }}\r\n               onBlur={event => {\r\n                  const value = String(event.target.value);\r\n\r\n                  if (value.match(/^[,.][0-9]$/)) {                  // \",5\" or \".9\"\r\n                     onSetConversion('0' + value + '0');\r\n                  } else if (value.match(/^[,.][0-9]{2}$/)) {        // \",50\" or \".91\"\r\n                     onSetConversion('0' + value);\r\n                  } else if (value.match(/^[0-9]+[,.][0-9]$/)) {     // \"5.9\" or \"1.0\"\r\n                     onSetConversion(value + '0');\r\n                  } else if (value.match(/^[0-9]+$/)) {              // \"3\" or \"15\"\r\n                     onSetConversion(value + '.00');\r\n                  } else if (value.length === 0) {                   // \"\" - empty field\r\n                     onSetConversion('0.00');\r\n                  }\r\n               }}\r\n            />\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\n\r\nexport default CurrencyConverter;\r\n","import { connect } from 'react-redux';\r\nimport { setConversion } from '../store/actions';\r\nimport CurrencyConverter from '../components/CurrencyConverter/CurrencyConverter';\r\n\r\nconst mapStateToProps = state => ({\r\n   conversion: state.conversion,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   onSetConversion: (value) => dispatch(setConversion(value))\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(CurrencyConverter)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     transactions: state.transactions,\r\n//     conversion: state.conversion,\r\n//   }\r\n// }\r\n//\r\n// const mapDispatchToProps = dispatch => {\r\n//    return {\r\n//       onAddTransaction: (name, amount) => {\r\n//          dispatch(addTransaction(name, amount))\r\n//       },\r\n//       onDeleteTransaction: (id) => {\r\n//          dispatch(deleteTransaction(id))\r\n//       },\r\n//       onSetConversion: (value) => {\r\n//          dispatch(setConversion(value))\r\n//       },\r\n//    }\r\n// }\r\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nfunction Card(props) {\r\n   return (\r\n      <div className={\"Card \" + props.display}>\r\n         {props.children}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\nfunction Button(props) {\r\n   return (\r\n      <div className=\"Button\" onClick={() => {props.onClick(\"hejka\", 9.33)}}>\r\n         {props.children}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport './Form.css';\r\nimport Card from '../Card/Card';\r\nimport Input from '../Input/Input';\r\nimport Button from '../Button/Button';\r\n\r\nclass Form extends React.Component {\r\n   constructor({onAddTransaction}) {\r\n      super();\r\n      this.state = {\r\n         name: '',\r\n         amount: '',\r\n         nameError: '',\r\n         amountError: ''\r\n      };\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.validate = this.validate.bind(this);\r\n      this.onAddTransaction = onAddTransaction;\r\n   }\r\n\r\n   handleChange({ target }) {\r\n      if (target.name === 'amount' && String(target.value).match(/^\\d+[,.]\\d{3,}/)) { }   // prevents user from typing in more than 2 decimal digits\r\n      else {\r\n         this.setState({\r\n            [target.name]: target.name === 'name' ? target.value : parseFloat(target.value)\r\n         }, () => {\r\n            if (this.state.nameError || this.state.amountError) {    // removes error message if value was corrected\r\n               this.validate();\r\n            }\r\n         });\r\n      }\r\n   }\r\n\r\n   validate() {\r\n      let isValid = true;\r\n\r\n      // validate name\r\n      if (this.state.name === '') {\r\n         this.setState({\r\n            nameError: \"Please enter a value\"\r\n         });\r\n         isValid = false;\r\n      } else {\r\n         this.setState({\r\n            nameError: ''\r\n         });\r\n      }\r\n\r\n      // validate amount\r\n      if (this.state.amount === '' || isNaN(this.state.amount)) {\r\n         this.setState({\r\n            amountError: \"Please enter a value\"\r\n         });\r\n         isValid = false;\r\n      } else if (this.state.amount === '0.00' || this.state.amount === 0.00 || this.state.amount < 0) {\r\n         this.setState({\r\n            amountError: \"Value has to be greater than zero\"\r\n         });\r\n         isValid = false;\r\n      } else {\r\n         this.setState({\r\n            amountError: ''\r\n         });\r\n      }\r\n\r\n      return isValid;\r\n   }\r\n\r\n   render() {\r\n      return(\r\n         <form className=\"Form\">\r\n            <Card display=\"flex\">\r\n               <Input\r\n                  title=\"transaction name\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  size=\"large\"\r\n                  type=\"text\"\r\n                  value={this.state.name}\r\n                  placeholder=\"asdasrasdas\"\r\n                  onChange={this.handleChange}\r\n                  error={this.state.nameError}\r\n               />\r\n               <Input\r\n                  title=\"amount\"\r\n                  name=\"amount\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  step=\"0.01\"\r\n                  value={!this.state.amount && this.state.amount !== 0 ? '' : this.state.amount}\r\n                  placeholder=\"0,00\"\r\n                  adornment=\"EUR\"\r\n                  onChange={this.handleChange}\r\n                  error={this.state.amountError}\r\n               />\r\n               <Button\r\n                  onClick={() => {\r\n                     if(this.validate()) {\r\n                        this.onAddTransaction(this.state.name, this.state.amount)\r\n                     }\r\n                  }}\r\n               >\r\n                  Add Transaction\r\n               </Button>\r\n            </Card>\r\n         </form>\r\n      )\r\n   }\r\n};\r\n\r\n\r\nexport default Form;\r\n","import { connect } from 'react-redux';\r\nimport { addTransaction } from '../store/actions';\r\nimport Form from '../components/Form/Form';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   onAddTransaction: (name, amount) => dispatch(addTransaction(name, amount))\r\n});\r\n\r\nexport default connect(\r\n   null,\r\n   mapDispatchToProps\r\n)(Form)\r\n","import React from 'react';\r\nimport './ListItem.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction ListItem({conversion, item, onClick}) {\r\n   return (\r\n      <li className=\"ListItem\">\r\n         <div className=\"ListItem__Col\">{item.name}</div>\r\n         <div className=\"ListItem__Col\">{item.amount.toFixed(2)}</div>\r\n         <div className=\"ListItem__Col\">{(item.amount * conversion).toFixed(2)}</div>\r\n         <div className=\"ListItem__Col\" onClick={onClick} title=\"Delete transaction\"><FontAwesomeIcon icon={faTrash}/></div>\r\n      </li>\r\n   );\r\n}\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport './List.css';\r\nimport ListItem from './ListItem/ListItem';\r\nimport Card from '../Card/Card';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBoxOpen } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction List ({conversion, transactions, onDeleteTransaction}){\r\n\r\n   const total = transactions.reduce((a, b) => a + b.amount, 0);\r\n\r\n   if(!transactions.length) {\r\n      return (\r\n         <div className=\"EmptyState\">\r\n            <FontAwesomeIcon className=\"EmptyState__Icon\" icon={faBoxOpen}/>\r\n            <h2 className=\"EmptyState__Header\">No transactions</h2>\r\n            <p className=\"EmptyState__Paragraph\">Create a new transaction by using the form above</p>\r\n         </div>\r\n      )\r\n   } else {\r\n      return (\r\n         <div>\r\n            <h3 className=\"ListTitle\">Transactions</h3>\r\n            <Card display=\"block\">\r\n               <ul className=\"List\">\r\n                  <li className=\"List__Header\">\r\n                     <div className=\"Header__Item\">Name</div>\r\n                     <div className=\"Header__Item\">Value (EUR)</div>\r\n                     <div className=\"Header__Item\">Value (PLN)</div>\r\n                     <div className=\"Header__Item\"></div>\r\n                  </li>\r\n\r\n                  {transactions.map((item, i) => (\r\n                     <ListItem key={i} item={item} conversion={conversion} onClick={() => {onDeleteTransaction(item.id)}}/>\r\n                  ))}\r\n\r\n                  <li className=\"List__Footer\">\r\n                     <div className=\"Footer__Item\">Total</div>\r\n                     <div className=\"Footer__Item\">{total.toFixed(2)}</div>\r\n                     <div className=\"Footer__Item\">{(total * conversion).toFixed(2)}</div>\r\n                     <div className=\"Footer__Item\"></div>\r\n                  </li>\r\n               </ul>\r\n            </Card>\r\n         </div>\r\n      );\r\n   }\r\n\r\n}\r\n\r\nexport default List;\r\n","import { connect } from 'react-redux';\r\nimport { deleteTransaction } from '../store/actions';\r\nimport List from '../components/List/List';\r\n\r\nconst mapStateToProps = state => ({\r\n   transactions: state.transactions,\r\n   conversion: state.conversion\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   onDeleteTransaction: (id) => dispatch(deleteTransaction(id))\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(List)\r\n","import React from 'react';\r\nimport './Maximum.css';\r\nimport Card from '../Card/Card';\r\n\r\nfunction Maximum ({conversion, transactions}) {\r\n   const max = Math.max.apply(Math, transactions.map((obj) => { return obj.amount; }));\r\n\r\n   if(!transactions.length) {\r\n      return null;\r\n   } else {\r\n      return (\r\n         <Card display=\"inline-block\">\r\n            <h4 className=\"Max__Title\">Highest Transaction</h4>\r\n            <div className=\"Max__Amount--EUR\">{max.toFixed(2)} EUR</div>\r\n            <div className=\"Max__Amount--PLN\">{(max * conversion).toFixed(2)} PLN</div>\r\n         </Card>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Maximum;\r\n","import { connect } from 'react-redux';\r\nimport Maximum from '../components/Maximum/Maximum';\r\n\r\nconst mapStateToProps = state => ({\r\n   transactions: state.transactions,\r\n   conversion: state.conversion\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   null\r\n)(Maximum)\r\n","import React from 'react';\nimport './App.css';\nimport CurrencyConverterWrapper from './containers/CurrencyConverterWrapper';\nimport FormWrapper from './containers/FormWrapper';\nimport ListWrapper from './containers/ListWrapper';\nimport MaximumWrapper from './containers/MaximumWrapper';\n\nconst App = () => (\n   <div className=\"App\">\n      <header className=\"Header\">\n         <div>\n            <h1 className=\"Header__Title\">Transactions Management</h1>\n            <small className=\"Header__Subtitle\">This is a placeholder text</small>\n         </div>\n         <CurrencyConverterWrapper/>\n      </header>\n\n      <FormWrapper/>\n\n      <ListWrapper/>\n\n      <MaximumWrapper/>\n\n   </div>\n);\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './store/reducers';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(rootReducer)\n\n// store.subscribe(() => {console.log(store.getState())});\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}